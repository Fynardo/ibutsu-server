# Template for Ibutsu backend in AppInterface
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ibutsu-backend-template
# ===============================================
# Backend
# ===============================================
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: ${APP_NAME}
    name: ibutsu-backend
  spec:
    replicas: 1
    selector:
      deploymentConfig: ibutsu-backend
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentConfig: ibutsu-backend
      spec:
        containers:
        - env:
          - name: GUNICORN_PROCESSES
            value: "1"
          - name: PORT
            value: "8080"
          - name: APP_CONFIG
            value: config.py
          - name: HAS_FRONTEND
            value: "false"
          - name: POSTGRESQL_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ibutsu-db
          - name: POSTGRESQL_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ibutsu-db
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ibutsu-db
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ibutsu-db
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ibutsu-db
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: redis
                optional: true
          - name: REDIS_HOSTNAME
            valueFrom:
              secretKeyRef:
                key: db.endpoint
                name: redis
          - name: REDIS_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: redis
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: value
                name: jwt-secret
          - name: IBUTSU_SUPERADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ibutsu-superadmin
          - name: IBUTSU_SUPERADMIN_NAME
            valueFrom:
              secretKeyRef:
                key: name
                name: ibutsu-superadmin
          - name: IBUTSU_SUPERADMIN_EMAIL
            valueFrom:
              secretKeyRef:
                key: email
                name: ibutsu-superadmin
          - name: CELERY_BROKER_URL
            valueFrom:
              secretKeyRef:
                key: broker-url
                name: ibutsu-celery
          - name: CELERY_RESULT_BACKEND
            valueFrom:
              secretKeyRef:
                key: result-backend
                name: ibutsu-celery
          - name: FRONTEND_URL
            value: https://${FRONTEND_ROUTE}
          - name: BACKEND_URL
            value: https://${BACKEND_ROUTE}
          - name: KEYCLOAK_BASE_URL
            value: ${KEYCLOAK_BASE_URL}
          - name: KEYCLOAK_CLIENT_ID
            value: ${KEYCLOAK_CLIENT_ID}
          - name: KEYCLOAK_REALM
            value: ${KEYCLOAK_REALM}
          - name: KEYCLOAK_NAME
            value: ${KEYCLOAK_NAME}
          - name: KEYCLOAK_ICON
            value: ${KEYCLOAK_ICON}
          - name: KEYCLOAK_VERIFY_SSL
            value: ${KEYCLOAK_VERIFY_SSL}
          - name: USER_LOGIN_ENABLED
            value: ${USER_LOGIN_ENABLED}
          image: quay.io/ibutsu/backend:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
          name: ibutsu-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - type: ConfigChange
# -----------------------------------------------
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APP_NAME}
    name: ibutsu-backend
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ibutsu-backend
# -----------------------------------------------
- kind: Route
  apiVersion: v1
  metadata:
    labels:
      app: ${APP_NAME}
    name: ibutsu-backend
    annotations:
      description: "A route to the backend"
  spec:
    host: ${BACKEND_ROUTE}
    to:
      kind: Service
      name: ibutsu-backend
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    port:
      targetPort: 8080
# ===============================================
# Parameters
# ===============================================
parameters:
- name: APP_NAME
  displayName: App Name
  description: The name of the application
  value: ibutsu-server
- name: BACKEND_ROUTE
  displayName: Backend Route
  description: The URL of the backend of the Ibutsu server
  value: ibutsu-api.example.com
- name: FRONTEND_ROUTE
  displayName: Frontend Route
  description: The URL of the frontend of the Ibutsu server
  value: ibutsu.example.com
- name: USER_LOGIN_ENABLED
  displayName: User Login Enabled
  description: Logging in with username and password enabled
  value: "true"
- name: KEYCLOAK_BASE_URL
  displayName: Base URL of Keycloak server
  description: The base URL of the Keycloak server
  value: http://keycloak.example.com
- name: KEYCLOAK_REALM
  displayName: Keycloak Realm
  description: The realm of the Keycloak client
  value: ibutsu
- name: KEYCLOAK_CLIENT_ID
  displayName: Keycloak Client ID
  description: The client ID used when authenticating via Keycloak
  value: ibutsu
- name: KEYCLOAK_NAME
  displayName: Name shown in UI
  description: The SSO method name shown in the UI when logging in
  value: Keycloak
- name: KEYCLOAK_ICON
  displayName: Icon shown in UI
  description: The icon shown in the UI when logging in
  value: keycloak
- name: KEYCLOAK_VERIFY_SSL
  displayName: Verify SSL
  description: "Whether to verify the SSL certificate. WARNING: setting this to false is insecure!"
  value: "true"
- name: IMAGE_TAG
  displayName: Image Tag
  description: The tag for the container image
